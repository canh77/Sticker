plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.android.extensions'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}


android {
    namespace 'com.lutech.stickerwhatsapp'
    compileSdk 34

    defaultConfig {
        applicationId "com.lutech.stickerwhatsapp"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        def contentProviderAuthority = applicationId + ".contentProvider.StickerContentProvider2"
//        manifestPlaceholders = [contentProviderAuthority: contentProviderAuthority]
//        buildConfigField("String", "CONTENT_PROVIDER_AUTHORITY", "\"${contentProviderAuthority}\"")

        vectorDrawables.useSupportLibrary = true
        def contentProviderAuthority = applicationId + ".provider.StickerContentProvider"
        // Creates a placeholder property to use in the manifest.
        manifestPlaceholders = [contentProviderAuthority: contentProviderAuthority]
        // Adds a new field for the authority to the BuildConfig class.
        buildConfigField("String", "CONTENT_PROVIDER_AUTHORITY", "\"${contentProviderAuthority}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.9.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    //ssp and sdp
    implementation 'com.intuit.sdp:sdp-android:1.1.0'
    implementation 'com.intuit.ssp:ssp-android:1.1.0'

    //FireBase
    implementation platform('com.google.firebase:firebase-bom:30.4.1')
    implementation 'com.google.firebase:firebase-analytics:21.2.0'
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-messaging:23.0.8'
    implementation 'com.google.firebase:firebase-database:20.0.6'
    implementation 'com.google.firebase:firebase-firestore:24.3.1'
    implementation 'com.google.firebase:firebase-storage:20.1.0'

    //crashlytics
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //remote config
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-analytics'

    //noinspection GradleCompatible
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    implementation 'com.orhanobut:hawk:2.0.1'
    implementation 'com.android.support:multidex:1.0.3'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:28.0.0'

    //firebase check email author
    implementation 'com.google.firebase:firebase-auth:21.0.0'




}